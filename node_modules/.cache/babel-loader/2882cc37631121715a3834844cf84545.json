{"ast":null,"code":"import _regeneratorRuntime from\"/home/lakshmi/Documents/react/netflix-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/lakshmi/Documents/react/netflix-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/lakshmi/Documents/react/netflix-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import axios from'./axios';import React,{useState,useEffect}from'react';import'./Row.css';import YouTube from'react-youtube';import movieTrailer from'movie-trailer';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var baseURL='https://image.tmdb.org/t/p/original/';function Row(_ref){var title=_ref.title,fetchUrl=_ref.fetchUrl,isLargeRow=_ref.isLargeRow;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),movies=_useState2[0],setMovies=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),trailerUrl=_useState4[0],setTrailerUrl=_useState4[1];useEffect(function(){function fetchData(){return _fetchData.apply(this,arguments);}function _fetchData(){_fetchData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(fetchUrl);case 2:result=_context.sent;setMovies(result.data.results);return _context.abrupt(\"return\",result);case 5:case\"end\":return _context.stop();}}},_callee);}));return _fetchData.apply(this,arguments);}fetchData();},[fetchUrl]);var opts={height:'390',width:'100%',playerVars:{autoplay:1}};var handleClick=function handleClick(movie){if(trailerUrl){setTrailerUrl('');}else{movieTrailer((movie===null||movie===void 0?void 0:movie.name)||\"\").then(function(url){var urlParams=new URLSearchParams(new URL(url).search);setTrailerUrl(urlParams.get(\"v\"));}).catch(function(error){console.log(error);});}};return/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"h2\",{children:title}),/*#__PURE__*/_jsx(\"div\",{className:\"row_posters\",children:movies.map(function(movie){return/*#__PURE__*/_jsx(\"img\",{onClick:function onClick(){return handleClick(movie);},className:\"row_poster \".concat(isLargeRow&&'row_posterLarge'),src:\"\".concat(baseURL).concat(isLargeRow?movie.poster_path:movie.backdrop_path),alt:movie.name},movie.id);})}),trailerUrl&&/*#__PURE__*/_jsx(YouTube,{videoId:trailerUrl,opts:opts})]});}export default Row;","map":{"version":3,"sources":["/home/lakshmi/Documents/react/netflix-clone/src/Row.js"],"names":["axios","React","useState","useEffect","YouTube","movieTrailer","baseURL","Row","title","fetchUrl","isLargeRow","movies","setMovies","trailerUrl","setTrailerUrl","fetchData","get","result","data","results","opts","height","width","playerVars","autoplay","handleClick","movie","name","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","map","poster_path","backdrop_path","id"],"mappings":"meAAA,MAAOA,CAAAA,KAAP,KAAkB,SAAlB,CACA,MAAOC,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAO,WAAP,CACA,MAAOC,CAAAA,OAAP,KAAoB,eAApB,CACA,MAAOC,CAAAA,YAAP,KAAyB,eAAzB,C,wFAEA,GAAMC,CAAAA,OAAO,CAAG,sCAAhB,CAEA,QAASC,CAAAA,GAAT,MAA8C,IAA/BC,CAAAA,KAA+B,MAA/BA,KAA+B,CAAxBC,QAAwB,MAAxBA,QAAwB,CAAdC,UAAc,MAAdA,UAAc,eAEdR,QAAQ,CAAC,EAAD,CAFM,wCAEnCS,MAFmC,eAE3BC,SAF2B,8BAGNV,QAAQ,CAAC,EAAD,CAHF,yCAGnCW,UAHmC,eAGvBC,aAHuB,eAK1CX,SAAS,CAAC,UAAM,SACGY,CAAAA,SADH,qIACZ,oKACyBf,CAAAA,KAAK,CAACgB,GAAN,CAAUP,QAAV,CADzB,QACUQ,MADV,eAEIL,SAAS,CAACK,MAAM,CAACC,IAAP,CAAYC,OAAb,CAAT,CAFJ,gCAGWF,MAHX,wDADY,4CAMZF,SAAS,GACZ,CAPQ,CAON,CAACN,QAAD,CAPM,CAAT,CASA,GAAMW,CAAAA,IAAI,CAAG,CACTC,MAAM,CAAE,KADC,CAETC,KAAK,CAAE,MAFE,CAGTC,UAAU,CAAE,CACRC,QAAQ,CAAC,CADD,CAHH,CAAb,CAQA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAW,CAC3B,GAAIb,UAAJ,CAAgB,CACZC,aAAa,CAAC,EAAD,CAAb,CACH,CAFD,IAGK,CACDT,YAAY,CAAC,CAAAqB,KAAK,OAAL,EAAAA,KAAK,SAAL,QAAAA,KAAK,CAAEC,IAAP,GAAe,EAAhB,CAAZ,CACKC,IADL,CACU,SAAAC,GAAG,CAAE,CACP,GAAMC,CAAAA,SAAS,CAAG,GAAIC,CAAAA,eAAJ,CAAoB,GAAIC,CAAAA,GAAJ,CAAQH,GAAR,EAAaI,MAAjC,CAAlB,CACAnB,aAAa,CAACgB,SAAS,CAACd,GAAV,CAAc,GAAd,CAAD,CAAb,CACH,CAJL,EAKKkB,KALL,CAKW,SAAAC,KAAK,CAAI,CAChBC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACH,CAPD,EAQH,CACJ,CAdD,CAeA,mBACI,aAAK,SAAS,CAAC,KAAf,wBACI,oBAAK3B,KAAL,EADJ,cAEI,YAAK,SAAS,CAAC,aAAf,UACMG,MAAM,CAAC2B,GAAP,CAAW,SAAAZ,KAAK,qBACd,YAEI,OAAO,CAAE,yBAAID,CAAAA,WAAW,CAACC,KAAD,CAAf,EAFb,CAGI,SAAS,sBAAgBhB,UAAU,EAAI,iBAA9B,CAHb,CAII,GAAG,WAAKJ,OAAL,SAAeI,UAAU,CAACgB,KAAK,CAACa,WAAP,CAAmBb,KAAK,CAACc,aAAlD,CAJP,CAKI,GAAG,CAAEd,KAAK,CAACC,IALf,EACSD,KAAK,CAACe,EADf,CADc,EAAhB,CADN,EAFJ,CAcK5B,UAAU,eAAI,KAAC,OAAD,EAAS,OAAO,CAAEA,UAAlB,CAA8B,IAAI,CAAEO,IAApC,EAdnB,GADJ,CAmBH,CAED,cAAeb,CAAAA,GAAf","sourcesContent":["import axios from './axios'\nimport React, { useState, useEffect } from 'react'\nimport './Row.css'\nimport YouTube from 'react-youtube';\nimport movieTrailer from 'movie-trailer';\n\nconst baseURL = 'https://image.tmdb.org/t/p/original/';\n\nfunction Row({ title, fetchUrl, isLargeRow }) {\n    \n    const [movies, setMovies] = useState([])\n    const [trailerUrl, setTrailerUrl] = useState('')\n\n    useEffect(() => {\n        async function fetchData() {\n            const result = await axios.get(fetchUrl);\n            setMovies(result.data.results);\n            return result;\n        }\n        fetchData();\n    }, [fetchUrl])\n\n    const opts = {\n        height: '390',\n        width: '100%',\n        playerVars: {\n            autoplay:1,\n        },\n    }\n\n    const handleClick = (movie) => {\n        if (trailerUrl) {\n            setTrailerUrl('')\n        }\n        else {\n            movieTrailer(movie?.name || \"\")\n                .then(url=>{\n                    const urlParams = new URLSearchParams(new URL(url).search);\n                    setTrailerUrl(urlParams.get(\"v\"))\n                })\n                .catch(error => {\n                console.log(error)\n            })\n        }\n    }\n    return (\n        <div className='row'>\n            <h2>{title}</h2>\n            <div className='row_posters'>\n                { movies.map(movie => (\n                    <img\n                        key={movie.id}\n                        onClick={()=>handleClick(movie)}\n                        className={`row_poster ${isLargeRow && 'row_posterLarge'}`}\n                        src={`${baseURL}${isLargeRow?movie.poster_path:movie.backdrop_path}`} \n                        alt={movie.name}\n                    />\n                 ))} \n\n            </div>\n            {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\n            {/* <YouTube videoId='XtMThy8QKqU' opts={opts} /> */}\n        </div>\n    )\n}\n\nexport default Row\n"]},"metadata":{},"sourceType":"module"}